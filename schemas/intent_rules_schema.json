{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Intent Rules Schema",
  "description": "JSON Schema for validating intent_rules.yaml structure and content",
  "type": "object",
  "required": ["intents"],
  "properties": {
    "intents": {
      "type": "array",
      "title": "Intent Rules Array",
      "description": "Array of intent classification rules",
      "minItems": 1,
      "items": {
        "type": "object",
        "title": "Intent Rule",
        "description": "Individual intent classification rule definition",
        "required": ["id", "priority", "lang", "pattern", "prefilter_literal"],
        "properties": {
          "id": {
            "type": "string",
            "title": "Rule ID",
            "description": "Unique identifier for the intent rule",
            "pattern": "^[a-z0-9_.-]+$",
            "minLength": 3,
            "maxLength": 64
          },
          "rule_version": {
            "type": "string",
            "title": "Rule Version",
            "description": "Semantic version of the rule for change tracking",
            "pattern": "^\\d+\\.\\d+\\.\\d+$"
          },
          "priority": {
            "type": "integer",
            "title": "Rule Priority",
            "description": "Priority level for rule evaluation (higher = higher priority)",
            "minimum": 0,
            "maximum": 100
          },
          "lang": {
            "type": "string",
            "title": "Language",
            "description": "Language this rule applies to",
            "enum": ["pt", "en"]
          },
          "channels": {
            "type": "array",
            "title": "Supported Channels",
            "description": "List of channels where this rule applies",
            "items": {
              "type": "string",
              "enum": ["web", "app", "whatsapp"]
            },
            "uniqueItems": true,
            "minItems": 1
          },
          "prefilter_literal": {
            "type": "string",
            "title": "Prefilter Literal",
            "description": "Literal string that must be present for this rule to be evaluated (performance optimization)",
            "minLength": 3,
            "maxLength": 32
          },
          "pattern": {
            "type": "string",
            "title": "Regex Pattern",
            "description": "Regular expression pattern for intent matching",
            "minLength": 1
          },
          "slots": {
            "type": "array",
            "title": "Extraction Slots",
            "description": "Named groups to extract from the pattern match",
            "items": {
              "type": "object",
              "title": "Slot Definition",
              "required": ["name", "group"],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Slot Name", 
                  "description": "Name of the extracted slot",
                  "pattern": "^[a-z_][a-z0-9_]*$"
                },
                "group": {
                  "type": "string",
                  "title": "Regex Group Name",
                  "description": "Named group in the regex pattern to extract",
                  "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "required": {
                  "type": "boolean",
                  "title": "Required Slot",
                  "description": "Whether this slot is required for the intent to match",
                  "default": false
                },
                "validation": {
                  "type": "string",
                  "title": "Slot Validation",
                  "description": "Additional validation pattern for the extracted value"
                }
              },
              "additionalProperties": false
            }
          },
          "risk_cost": {
            "type": "number",
            "title": "Risk Cost",
            "description": "Cost of misclassification for tie-breaking (lower = safer)",
            "minimum": 0.0,
            "maximum": 10.0,
            "default": 1.0
          },
          "node_mapping": {
            "type": "array",
            "title": "Node Mapping",
            "description": "LangGraph nodes this intent should route to",
            "items": {
              "type": "string",
              "pattern": "^[a-z_][a-z0-9_]*$"
            },
            "uniqueItems": true
          },
          "context_requirements": {
            "type": "object",
            "title": "Context Requirements",
            "description": "Contextual requirements for this intent to be valid",
            "properties": {
              "stages": {
                "type": "array",
                "title": "Required Stages",
                "description": "Conversation stages where this intent is valid",
                "items": {
                  "type": "string",
                  "enum": ["greeting", "qualification", "information_gathering", "scheduling", "validation", "confirmation", "completed", "handoff"]
                }
              },
              "exclude_stages": {
                "type": "array", 
                "title": "Excluded Stages",
                "description": "Conversation stages where this intent should NOT be matched",
                "items": {
                  "type": "string",
                  "enum": ["greeting", "qualification", "information_gathering", "scheduling", "validation", "confirmation", "completed", "handoff"]
                }
              }
            },
            "additionalProperties": false
          },
          "description": {
            "type": "string",
            "title": "Rule Description",
            "description": "Human-readable description of what this rule matches"
          }
        },
        "additionalProperties": false
      }
    },
    "metadata": {
      "type": "object",
      "title": "Metadata",
      "description": "Optional metadata about the rule set",
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string", 
          "format": "date-time"
        },
        "author": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}