"""
üß™ RED PHASE TEST: Provar AttributeError no GeminiClassifier

Este teste ir√° provar que existe um AttributeError quando o master_router
chama um m√©todo inexistente no GeminiClassifier.
"""

import os
from unittest.mock import AsyncMock, patch

import pytest

from app.core.gemini_classifier import GeminiClassifier


@pytest.mark.asyncio
async def test_gemini_classifier_attribute_error():
    """
    üö® RED PHASE TEST: Este teste deve falhar com AttributeError

    O GeminiClassifier est√° tentando chamar self._build_nlu_prompt(), mas essa fun√ß√£o
    est√° definida fora da classe. Este teste ir√° expor o problema diretamente.
    """
    # ARRANGE: Criar uma inst√¢ncia de GeminiClassifier for√ßadamente habilitada
    with patch.dict(os.environ, {"GEMINI_API_KEY": "fake_key_for_testing"}):
        classifier = GeminiClassifier()

        # For√ßar enabled=True mesmo que a API key seja fake
        classifier.enabled = True

        # Mock o modelo Gemini para n√£o fazer chamadas reais
        classifier.model = AsyncMock()
        classifier.model.generate_content_async = AsyncMock(
            return_value=AsyncMock(
                text='{"primary_intent": "greeting", '
                + '"secondary_intent": null, "entities": {}, "confidence": 0.9}'
            )
        )

    # ACT & ASSERT: Deve falhar com AttributeError quando tentar chamar _build_nlu_prompt
    try:
        await classifier.classify("ol√°", {})
        # Se chegou aqui, o AttributeError foi corrigido
        print("‚úÖ GREEN PHASE: AttributeError foi corrigido!")
    except AttributeError as e:
        if "_build_nlu_prompt" in str(e):
            print("üö® RED PHASE: Confirmado! AttributeError encontrado:")
            print(f"   Erro: {str(e)}")
            pytest.fail(f"EXPECTED FAILURE (Red Phase): {str(e)}")
        else:
            # Outro AttributeError n√£o relacionado
            raise
    except Exception as e:
        print(f"üîç Outro erro encontrado: {type(e).__name__}: {str(e)}")
        # Pode ser outro problema relacionado ao mock
        raise
