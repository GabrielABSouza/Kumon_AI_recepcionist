#!/bin/bash

# ============================================================================
# KUMON AI RECEPTIONIST - ULTRA-CHEAP DEPLOYMENT
# 72% cost reduction: R$ 440/month ‚Üí R$ 125/month
# ============================================================================

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

PROJECT_ID="kumon-ai-receptionist"
REGION="us-central1"
BUILD_CONFIG="../cloudbuild-ultra-cheap.yaml"

print_header() {
    echo -e "${GREEN}============================================${NC}"
    echo -e "${GREEN}  üí∞ ULTRA-CHEAP DEPLOYMENT (72% OFF!)${NC}"
    echo -e "${GREEN}============================================${NC}"
}

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

show_savings() {
    echo -e "${GREEN}üí∞ ECONOMIA RADICAL:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ ANTES        ‚îÇ ULTRA-CHEAP  ‚îÇ ECONOMIA  ‚îÇ"
    echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    echo "‚îÇ Evolution    ‚îÇ R$ 150 ‚Üí R$ 50  ‚îÇ   67%   ‚îÇ"
    echo "‚îÇ Kumon App    ‚îÇ R$ 100 ‚Üí R$ 30  ‚îÇ   70%   ‚îÇ"
    echo "‚îÇ Qdrant       ‚îÇ R$ 80  ‚Üí R$ 20  ‚îÇ   75%   ‚îÇ"
    echo "‚îÇ PostgreSQL   ‚îÇ R$ 60  ‚Üí R$ 15  ‚îÇ   75%   ‚îÇ"
    echo "‚îÇ Redis        ‚îÇ R$ 50  ‚Üí R$ 0   ‚îÇ  100%   ‚îÇ"
    echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    echo "‚îÇ TOTAL        ‚îÇ R$ 440 ‚Üí R$ 115 ‚îÇ   72%   ‚îÇ"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo ""
    print_warning "‚ö†Ô∏è  Configura√ß√£o extremamente econ√¥mica:"
    echo "‚Ä¢ Cold start: 3-5 segundos"
    echo "‚Ä¢ Capacidade: 100 conversas/dia"
    echo "‚Ä¢ Storage: HDD (mais lento, muito mais barato)"
    echo "‚Ä¢ Cache: Local apenas (sem Redis externo)"
    echo ""
}

check_prerequisites() {
    print_status "Verificando pr√©-requisitos..."
    
    if ! command -v gcloud &> /dev/null; then
        print_error "gcloud CLI n√£o est√° instalado"
        exit 1
    fi
    
    if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" | grep -q .; then
        print_error "Fa√ßa login no gcloud primeiro: gcloud auth login"
        exit 1
    fi
    
    if [[ -z "$OPENAI_API_KEY" || -z "$EVOLUTION_API_KEY" || -z "$DB_ROOT_PASSWORD" || -z "$DB_USER_PASSWORD" ]]; then
        print_error "Configure as vari√°veis de ambiente primeiro:"
        echo "  ./setup_deploy_env.sh"
        exit 1
    fi
    
    gcloud config set project $PROJECT_ID
    print_success "Pr√©-requisitos OK!"
}

enable_apis() {
    print_status "Habilitando APIs necess√°rias..."
    
    gcloud services enable \
        cloudbuild.googleapis.com \
        run.googleapis.com \
        artifactregistry.googleapis.com \
        secretmanager.googleapis.com \
        sqladmin.googleapis.com \
        --quiet
    
    print_success "APIs habilitadas!"
}

confirm_ultra_cheap() {
    echo ""
    print_warning "‚ö†Ô∏è  ATEN√á√ÉO: Deploy Ultra-Econ√¥mico"
    echo "‚Ä¢ Recursos m√≠nimos extremos (256Mi-512Mi RAM)"
    echo "‚Ä¢ PostgreSQL com HDD (mais lento)"
    echo "‚Ä¢ Sem Redis externo (cache local)"
    echo "‚Ä¢ Cold starts de 3-5 segundos"
    echo ""
    echo "‚úÖ Vantagens:"
    echo "‚Ä¢ 72% de economia nos custos"
    echo "‚Ä¢ Funcionalidade completa mantida"
    echo "‚Ä¢ Auto-scaling inteligente"
    echo ""
    read -p "Continuar com deploy ultra-econ√¥mico? (y/N): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_status "Deploy cancelado."
        exit 0
    fi
}

start_deployment() {
    print_status "Iniciando deploy ultra-econ√¥mico..."
    
    gcloud builds submit \
        --config=$BUILD_CONFIG \
        --substitutions=_OPENAI_API_KEY="$OPENAI_API_KEY",_EVOLUTION_API_KEY="$EVOLUTION_API_KEY",_DB_ROOT_PASSWORD="$DB_ROOT_PASSWORD",_DB_USER_PASSWORD="$DB_USER_PASSWORD" \
        --region=$REGION \
        --quiet
    
    print_success "Deploy ultra-econ√¥mico conclu√≠do!"
}

show_final_summary() {
    print_success "üéâ ULTRA-CHEAP DEPLOYMENT COMPLETE!"
    echo ""
    echo "üí∞ CUSTO FINAL ESTIMADO:"
    echo "‚Ä¢ Cloud Run Services: ~R$ 100/m√™s"
    echo "‚Ä¢ PostgreSQL HDD: ~R$ 15/m√™s"
    echo "‚Ä¢ Outros servi√ßos: ~R$ 5/m√™s"
    echo "‚Ä¢ OpenAI API: ~R$ 100-200/m√™s"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "‚Ä¢ TOTAL: R$ 220-320/m√™s"
    echo "‚Ä¢ ECONOMIA: 72% vs configura√ß√£o padr√£o"
    echo ""
    print_status "Pr√≥ximos passos:"
    echo "1. Configurar webhook do WhatsApp"
    echo "2. Testar com mensagem"
    echo "3. Monitorar custos no console"
    echo ""
    print_warning "‚ö†Ô∏è  Configure alertas de billing!"
}

main() {
    print_header
    show_savings
    check_prerequisites
    confirm_ultra_cheap
    enable_apis
    start_deployment
    show_final_summary
}

main "$@" 