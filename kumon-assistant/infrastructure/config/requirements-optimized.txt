# ============================================================================
# KUMON ASSISTANT - OPTIMIZED REQUIREMENTS (GCP Native)
# Removing heavy ML dependencies in favor of GCP managed services
# ============================================================================

# Core Framework
fastapi==0.104.1
uvicorn[standard]==0.24.0
pydantic==2.5.0
pydantic-settings==2.1.0
email-validator==2.1.0

# HTTP Client
httpx==0.25.2

# Database
asyncpg==0.29.0
sqlalchemy[asyncio]==2.0.23

# Vector Database (Keep Qdrant client - lightweight)
qdrant-client==1.7.0

# AI/ML - OPTIMIZED: Use GCP services instead of local models
openai==1.6.1

# Google Cloud Services (Replace heavy ML libs)
google-cloud-aiplatform==1.38.0
google-cloud-translate==3.12.1
google-cloud-language==2.9.1

# Google APIs
google-auth==2.25.2
google-auth-oauthlib==1.2.0
google-auth-httplib2==0.2.0
google-api-python-client==2.110.0

# Utilities
python-dotenv==1.0.0
python-multipart==0.0.6
Pillow==10.1.0
pandas==2.1.4

# Lightweight ML utilities (keep only essential)
numpy==1.24.4
scikit-learn==1.3.2  # Much lighter version

# Date/Time
python-dateutil==2.8.2
pytz==2023.3

# Logging
structlog==23.2.0

# Development
pytest==7.4.3
pytest-asyncio==0.21.1
black==23.11.0
isort==5.12.0

# ============================================================================
# REMOVED HEAVY DEPENDENCIES (Replaced by GCP services):
# - torch==2.1.2              (~800MB) -> Vertex AI
# - torchvision==0.16.2        (~50MB)  -> Vertex AI  
# - transformers==4.36.2       (~100MB) -> Vertex AI
# - sentence-transformers==2.3.1 (~50MB) -> Vertex AI Embeddings API
# - faiss-cpu==1.7.4           (~30MB)  -> Qdrant handles this
# - langchain==0.1.0           -> Direct OpenAI integration
# - langchain-community==0.0.10
# - langchain-openai==0.0.2
# - huggingface-hub>=0.19.0
# 
# TOTAL SPACE SAVED: ~1GB+ in container size
# TOTAL BUILD TIME SAVED: ~5-10 minutes
# ============================================================================ 