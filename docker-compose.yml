version: '3.8'

services:
  # Evolution API Lite - Without Redis dependency issues
  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v1.7.1
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Authentication
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=${EVOLUTION_API_KEY:-development-key-change-in-production}
      
      # Server Configuration
      - SERVER_PORT=8080
      - SERVER_URL=http://localhost:8080
      
      # Instance Management - Fix for message recovery loop
      - DEL_INSTANCE=true
      - DATABASE_ENABLED=false
      - DATABASE_SAVE_DATA_INSTANCE=false
      - DATABASE_SAVE_DATA_NEW_MESSAGE=false
      - DATABASE_SAVE_MESSAGE_UPDATE=false
      - DATABASE_SAVE_DATA_CONTACTS=false
      - DATABASE_SAVE_DATA_CHATS=false
      - DATABASE_SAVE_DATA_HISTORIC=false
      - DATABASE_DELETE_MESSAGE=false
      
      # QR Code Configuration
      - QRCODE_LIMIT=30
      - QRCODE_COLOR=#198754
      
      # Store Configuration - Disable message recovery
      - STORE_MESSAGES=false
      - STORE_MESSAGE_UP=false
      - STORE_CONTACTS=false
      
      # Disable message recovery completely
      - CLEAN_STORE_CLEANING_INTERVAL=0
      - CLEAN_STORE_MESSAGES=false
      - CLEAN_STORE_MESSAGE_UP=false
      - CLEAN_STORE_CONTACTS=false
      - CLEAN_STORE_CHATS=false
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_COLOR=true
      
      # Redis Configuration - Disable to fix recovery loop
      - REDIS_ENABLED=false
      - CACHE_REDIS_ENABLED=false
      - CACHE_REDIS_SAVE_INSTANCES=false
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - kumon-net

  # Redis Cache - High-performance memory store
  redis:
    container_name: redis_cache
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
      --save 300 1
    networks:
      - kumon-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL Database - Persistent analytics storage
  postgres:
    container_name: postgres_db
    image: postgres:16-alpine
    restart: always
    # Removed port mapping - PostgreSQL accessible only within Docker network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=kumon_analytics
      - POSTGRES_USER=kumon_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kumon_dev_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8
    networks:
      - kumon-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kumon_user -d kumon_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database - Essential for AI Assistant
  qdrant:
    container_name: qdrant_db
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - kumon-net

  # Kumon Assistant Application - Simplified
  kumon-assistant:
    container_name: kumon_assistant
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - EVOLUTION_API_URL=http://evolution-api:8080
      - EVOLUTION_API_KEY=${EVOLUTION_API_KEY:-development-key-change-in-production}
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=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
      - GEMINI_API_KEY=AIzaSyBxMcwYJ1h9wak7J7daeTSn7cvsARkeAGU
      # Memory System Configuration
      - MEMORY_REDIS_URL=redis://redis:6379/0
      - MEMORY_POSTGRES_URL=postgresql://kumon_user:${POSTGRES_PASSWORD:-kumon_dev_password}@postgres:5432/kumon_analytics
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      # LangGraph Checkpoints
      - DATABASE_URL=postgresql://kumon_user:${POSTGRES_PASSWORD:-kumon_dev_password}@postgres:5432/kumon_analytics
      # LangSmith Configuration - FASE 5 CRITICAL
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT:-kumon-assistant}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      # Security Configuration - FASE 5 OBRIGATÃ“RIO
      - USE_SECURE_PROCESSING=${USE_SECURE_PROCESSING:-true}
      - SECURE_ROLLOUT_PERCENTAGE=${SECURE_ROLLOUT_PERCENTAGE:-100.0}
      - SECURITY_LOGGING_ENABLED=${SECURITY_LOGGING_ENABLED:-true}
      - ENABLE_PROMPT_INJECTION_DEFENSE=${ENABLE_PROMPT_INJECTION_DEFENSE:-true}
      - ENABLE_DDOS_PROTECTION=${ENABLE_DDOS_PROTECTION:-true}
      - ENABLE_SCOPE_VALIDATION=${ENABLE_SCOPE_VALIDATION:-true}
      - ENABLE_INFORMATION_PROTECTION=${ENABLE_INFORMATION_PROTECTION:-true}
      - ENABLE_ADVANCED_THREAT_DETECTION=${ENABLE_ADVANCED_THREAT_DETECTION:-true}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      evolution-api:
        condition: service_started
      qdrant:
        condition: service_started
    networks:
      - kumon-net

volumes:
  evolution_instances:
  evolution_store:
  redis_data:
  postgres_data:
  qdrant_data:

networks:
  kumon-net:
    driver: bridge